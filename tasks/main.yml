---
- name: Ensure gor group
  group:
    name: "{{ gor_group }}"

- name: Ensure gor user
  user:
    name: "{{ gor_user }}"
    group: "{{ gor_group }}"
    home: /bin/false
    createhome: yes

- name: Ensure gor dirs exists
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ gor_user }}"
    group: "{{ gor_group }}"
  with_items:
    - "{{ gor_bin_dir }}"
    - "{{ gor_output_dir }}"

- name: Download gor
  get_url:
    url: "{{ gor_url }}/{{ gor_package }}"
    dest: "/tmp/{{ gor_package }}"
  register: download_gor

- name: Extract gor
  unarchive:
    src: "/tmp/{{ gor_package }}"
    dest: "/tmp/"
    copy: no
  when: download_gor|changed

- name: Copy binary
  copy:
    src: "/tmp/gor"
    dest: "{{ gor_bin_dir }}/gor"
    remote_src: True
    owner: "{{ gor_user }}"
    group: "{{ gor_group }}"
    mode: '0755'
  notify: restart gor

- name: Ensure gor can open raw sockets
  command: >
    setcap "cap_net_raw,cap_net_admin+eip" {{ gor_bin_dir }}/gor
  changed_when: false
  tags:
    - skip_ansible_lint

- name: Link binary
  file:
    src: "{{ gor_bin_dir }}/gor"
    dest: /usr/bin/gor
    state: link

- name: Template out gor.service file
  template:
    src: gor.service.j2
    dest: /etc/systemd/system/gor.service
    mode: '0755'
  notify: update gor service file

- name: Register systemd service
  service:
    name: gor
    enabled: no
    state: "{{ 'started' if gor_enabled else 'stopped' }}"
